import numpy as np
import re

def arithmetic_arranger(list_of_strings, Answers = False):
  # future ideas, add / or *, use floats instead of integers
  ans = []
  top_row = []
  bot_row = []
  
  # use regex to error check the list of strings 
  probs_with_los = 0

  for i in list_of_strings:
      matched = re.match("[a-zA-Z/*]+", i)
      is_match = bool(matched)
      #print(is_match)
      if is_match == True:
        probs_with_los += 1

  # if a problem with the lsit raise exception
  if probs_with_los < 1:
    print("list of strings check is good")
  else:
    raise Exception("Only numbers allowed, and + or -.  Fix the list of strings and retry")
    

  # split the list of strings    
  for i in list_of_strings: 
    if "+" in i: 
      arr_plus = []
      x = i.split("+")
      arr_plus.append(x)
      # convert everything to integers
      arr_plus = [[int(j) for j in i] for i in arr_plus] 
      top_row.append(arr_plus[0][0])
      bot_row.append(arr_plus[0][1])
      ans.append(np.sum(arr_plus))

    if "-" in i:
      arr_minus = []
      x = i.split("-")
      arr_minus.append(x)
      # convert everything to integers
      arr_mins = [[int(j) for j in i] for i in arr_minus]   
      #create numpy array for easy negative nums
      x = np.negative(arr_mins[0][1])
      arr_mins[0][1] = x
      top_row.append(arr_mins[0][0])
      bot_row.append(arr_mins[0][1])
      ans.append(np.sum(arr_mins))

  # Print the results
  for i in range(0,len(top_row)):
    print("\n\n  ", top_row[i], "\n"," ",bot_row[i], "\n----------")
    if Answers == True:
      print("  ", ans[i], "\n\n")
